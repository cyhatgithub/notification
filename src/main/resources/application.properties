server.servlet.context-path: /spring
# 日志
logging.file = /Users/chenyinghao/log/notification.log

# 端口
server.port = 8080

# 编码格式
server.tomcat.uri-encoding=utf-8

# 数据库相关配置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://172.16.132.128:3306/notification?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=Cloudwiz_123

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

#指定bean所在包
mybatis.type-aliases-package=com.yinghao.notification.entity

#mapper
#mappers 多个接口时逗号隔开
mapper.mappers=com.yinghao.notification.utils.MyMapper
#mapper.mappers=com.yinghao.notification.dao.CourseMapper
mapper.not-empty=false
mapper.identity=MYSQL

# 微信
wechat.token = yinghao
wechat.url.token = https://api.weixin.qq.com/cgi-bin/token
wechat.url.create.menu = https://api.weixin.qq.com/cgi-bin/menu/create?access_token=%s
wechat.url.template.message = https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=%s
wechat.url.oauth.token = https://api.weixin.qq.com/sns/oauth2/access_token